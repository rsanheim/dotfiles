#!/usr/bin/env ruby

require "etc"
require "parallel"
require "optparse"

options = {jobs: Etc.nprocessors, debug: false}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: eachdir [OPTIONS] <command>"
  opts.separator ""
  opts.separator "Executes the specified command in each subdirectory of the current working directory."
  opts.separator ""
  opts.separator "Options:"

  opts.on("-d", "--debug", "Display the commands being run") do
    options[:debug] = true
  end

  opts.on("-j", "--jobs N", Integer, "Number of parallel jobs (default: CPU count)") do |n|
    options[:jobs] = n
  end

  opts.on("-h", "--help", "Show this help message") do
    puts opts
    exit
  end
end

parser.parse!

if ARGV.empty?
  puts "Error: No command provided."
  puts
  puts parser
  exit 1
end

command = ARGV.join(" ")
dirs = Dir.glob("*/").map { |d| d.chomp("/") }

Parallel.each(dirs, in_processes: options[:jobs]) do |dir|
  puts "[#{dir}]" if options[:debug]

  Dir.chdir(dir) do
    IO.popen(command, err: [:child, :out]) do |io|
      while line = io.gets
        puts "[#{dir}] #{line}"
      end
    end
  end
rescue => e
  puts "[#{dir}] Error: #{e.message}"
end
